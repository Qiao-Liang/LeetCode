# from collections import defaultdict

class Solution:
    def minCostToMoveChips(self, chips) -> int:
        even = odd = 0

        for c in chips:
            if c & 1:
                odd += 1
            else:
                even += 1

        return min(even, odd)
        
        # pos = [dic[k] for k in sorted(dic.keys())]
        
        # while len(pos) > 2:
        #     if pos[0] > pos[-1]:
        #         pos[2] += pos[0]
        #         pos.pop(0)
        #     else:
        #         pos[-3] += pos[-1]
        #         pos.pop()
            
        # return min(pos)


sol = Solution()
# p = [1,2,3]
# p = [2,2,2,3,3]
# p = [3,3,1,2,2]
# p = [6,4,7,8,2,10,2,7,9,7]
# p = [10,3,3,1,6,2,1,10,6,6]
p = [591413175,182351872,756860273,696092252,20210353,323162074,476584498,306095182,660417876,728812299,191787370,103693457,133652629,507004362,782205709,848935607,277975501,587105726,12363201,464649772,945173326,348878230,721952308,622248693,725560506,619321800,565827834,624429737,815643221,465829523,492902445,449434481,475131519,548957626,563881909,995458745,875600259,560225012,335452122,691650711,92112576,666156311,106763524,798718513,474522008,689388489,14339396,549911467,373072280,181683654,688688869,175196193,611188861,774186218,926814023,244034213,789884175,272918989,897017832,936636802,257803798,106694220,747411765,475950002,740218617,28836055,176693592,104527871,713943436,275808930,526812619,484377045,196631523,678048699,132493640,194983387,735090022]
print(sol.minCostToMoveChips(p))
