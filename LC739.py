class Solution(object):
    def dailyTemperatures(self, T):
        """
        :type T: List[int]
        :rtype: List[int]
        """
        res = [0] * len(T)
        stack = [0] * len(T)
        top_idx = -1

        for idx, val in enumerate(T):
            while top_idx > -1 and T[stack[top_idx]] < val:
                temp = stack[top_idx]
                top_idx -= 1
                res[temp] = idx - temp

            top_idx += 1
            stack[top_idx] = idx

        return res

        # res = [0] * len(T)

        # for idx, val in enumerate(T):
        #     while stack and T[stack[-1]] < val:
        #         temp = stack.pop()
        #         res[temp] = idx - temp

        #     stack.append(idx)

        # return res

        # for idx, val in enumerate(T):
        #     count = 0

        #     while stack and stack[-1][1] < val:
        #         temp = stack.pop()
        #         count += temp[2]
        #         res[temp[0]] = count

        #     if stack and count:
        #         stack[-1][2] += count
            
        #     stack.append([idx, val, 1])

        # return res


sol = Solution()
# T = [73, 74, 75, 71, 69, 72, 76, 73]
T = [64, 40, 49, 73, 72, 35, 68, 83, 35, 73, 84, 88, 96, 43, 74, 63, 41, 95, 48, 46, 89, 72, 34, 85, 72, 59, 87, 49, 30, 32, 47, 34, 74, 58, 31, 75, 73, 88, 64, 92, 83, 64, 100, 99, 81, 41, 48, 83, 96, 92, 82, 32, 35, 68, 68, 92, 73, 92, 52, 33, 44, 38, 47, 88, 71, 50, 57, 95, 33, 65, 94, 44, 47, 79, 41, 74, 50, 67, 97, 31, 68, 50, 37, 70, 77, 55, 48, 30, 77, 100, 31, 100, 69, 60, 47, 95, 68, 47, 33, 64]
print(sol.dailyTemperatures(T))

# [3, 1, 1, 3, 3, 1, 1, 3, 1, 1, 1, 1, 9, 1, 3, 2, 1, 9, 2, 1, 11, 2, 1, 3, 2, 1, 9, 5, 1, 1, 2, 1, 3, 2, 1, 2, 1, 2, 1, 3, 2, 1, 0, 13, 3, 1, 1, 1, 12, 9, 5, 1, 1, 2, 1, 6, 1, 6, 5, 1, 2, 1, 1, 3, 3, 1, 1, 7, 1, 1, 6, 1, 1, 4, 1, 3, 1, 1, 8, 1, 3, 2, 1, 1, 5, 3, 2, 1, 1, 0, 1, 0, 3, 2, 1, 0, 0, 2, 1, 0]
# [3, 1, 1, 4, 3, 1, 1, 3, 1, 1, 1, 1, 30, 1, 3, 2, 1, 25, 2, 1, 19, 2, 1, 3, 2, 1, 11, 5, 1, 1, 2, 1, 3, 2, 1, 2, 1, 2, 1, 3, 2, 1, 0, 46, 3, 1, 1, 1, 30, 18, 5, 1, 1, 2, 1, 12, 1, 10, 5, 1, 2, 1, 1, 4, 3, 1, 1, 11, 1, 1, 8, 1, 1, 5, 1, 3, 1, 1, 11, 1, 3, 2, 1, 1, 5, 3, 2, 1, 1, 0, 1, 0, 3, 2, 1, 0, 0, 2, 1, 0]
# [3, 1, 1, 4, 3, 1, 1, 3, 1, 1, 1, 1, 30, 1, 3, 2, 1, 25, 2, 1, 19, 2, 1, 3, 2, 1, 11, 5, 1, 1, 2, 1, 3, 2, 1, 2, 1, 2, 1, 3, 2, 1, 0, 46, 3, 1, 1, 1, 30, 18, 5, 1, 1, 2, 1, 12, 1, 10, 5, 1, 2, 1, 1, 4, 3, 1, 1, 11, 1, 1, 8, 1, 1, 5, 1, 3, 1, 1, 11, 1, 3, 2, 1, 1, 5, 3, 2, 1, 1, 0, 1, 0, 3, 2, 1, 0, 0, 2, 1, 0]